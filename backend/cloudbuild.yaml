steps:
  # Install dependencies and build
  - name: 'node:18-alpine'
    entrypoint: 'npm'
    args: ['ci']
    
  - name: 'node:18-alpine'
    entrypoint: 'npm'
    args: ['run', 'build']
    
  # Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/la-red-de-automatas-backend:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/la-red-de-automatas-backend:latest',
      '.'
    ]
    
  # Push to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/la-red-de-automatas-backend:$COMMIT_SHA']
    
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/la-red-de-automatas-backend:latest']
    
  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'run', 'deploy', 'la-red-de-automatas-backend',
      '--image', 'gcr.io/$PROJECT_ID/la-red-de-automatas-backend:$COMMIT_SHA',
      '--region', 'us-central1',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--set-env-vars', 'GCP_PROJECT_ID=$PROJECT_ID',
      '--set-env-vars', 'NODE_ENV=production',
      '--set-env-vars', 'LOG_LEVEL=info'
    ]

# Store images in Container Registry
images:
  - 'gcr.io/$PROJECT_ID/la-red-de-automatas-backend:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/la-red-de-automatas-backend:latest'

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 100
  
# Timeout for the entire build
timeout: '1200s'